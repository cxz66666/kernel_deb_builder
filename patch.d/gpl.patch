diff --color -Nur linux-5.15.102/kernel/module.c linux-5.15.102-modify/kernel/module.c
--- linux-5.15.102/kernel/module.c	2023-03-13 17:20:37.000000000 +0800
+++ linux-5.15.102-modify/kernel/module.c	2024-04-15 23:30:35.308996553 +0800
@@ -1373,25 +1373,6 @@
 	return 0;
 }
 
-static bool inherit_taint(struct module *mod, struct module *owner)
-{
-	if (!owner || !test_bit(TAINT_PROPRIETARY_MODULE, &owner->taints))
-		return true;
-
-	if (mod->using_gplonly_symbols) {
-		pr_err("%s: module using GPL-only symbols uses symbols from proprietary module %s.\n",
-			mod->name, owner->name);
-		return false;
-	}
-
-	if (!test_bit(TAINT_PROPRIETARY_MODULE, &mod->taints)) {
-		pr_warn("%s: module uses symbols from proprietary module %s, inheriting taint.\n",
-			mod->name, owner->name);
-		set_bit(TAINT_PROPRIETARY_MODULE, &mod->taints);
-	}
-	return true;
-}
-
 /* Resolve a symbol for this module.  I.e. if we find one, record usage. */
 static const struct kernel_symbol *resolve_symbol(struct module *mod,
 						  const struct load_info *info,
@@ -1415,14 +1396,6 @@
 	if (!find_symbol(&fsa))
 		goto unlock;
 
-	if (fsa.license == GPL_ONLY)
-		mod->using_gplonly_symbols = true;
-
-	if (!inherit_taint(mod, fsa.owner)) {
-		fsa.sym = NULL;
-		goto getname;
-	}
-
 	if (!check_version(info, name, mod, fsa.crc)) {
 		fsa.sym = ERR_PTR(-EINVAL);
 		goto getname;
